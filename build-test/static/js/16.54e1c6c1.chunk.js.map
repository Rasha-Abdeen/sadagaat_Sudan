{"version":3,"sources":["components/projects/index.js","components/projects/plannedProjects.js"],"names":["Projects","props","useState","data","setData","currentPage","projectsType","postsPerPage","totalPages","setTotalPages","startDate","endDate","Dates","SetSelectedDates","setStartDate","setEndDate","alertOn","setAlert","filterOn","loading","setLoading","sorting","sortBtnFlip","toggleSortBtns","t","useTranslation","projectType","type","projectProgressAlign","i18n","dir","filterAlign","clearFilterClasses","sorBtnClasses","iconDir","fetchData","a","filterProjectsType","prefix","address","FilterUrl","window","fetch","headers","language","items","page","results","params","fetcher","json","response","console","log","fetchDataFiltered","isSorting","undefined","document","getElementsByClassName","useEffect","className","classes","alertClasses","onClick","aria-hidden","years","start","end","ans","i","push","range","Date","getFullYear","months","dateInputClasses","Fragment","selected","placeholderText","onChange","date","selectsStart","renderCustomHeader","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","style","margin","display","justifyContent","disabled","value","getYear","target","map","option","key","getMonth","indexOf","selectsEnd","datePickerCustom","filterBtn","filterBtnClasses","today","getDate","setTimeout","reverse","length","project","index","to","id","height","src","width","getNumber","raised","goal","data-percent","Precision","donationProgress","textAlign","projectProgress","name","parse","description","position","bottom","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","pageNumber","containerClassName","subContainerClassName","activeClassName","PlannedProjects","coverImage"],"mappings":"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","file":"static/js/16.54e1c6c1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport address from \"../utils/address\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Precision, getNumber } from \"../events/getMonthName\";\r\nimport parse from \"html-react-parser\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Preload from \"../preload\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n/**\r\n * this componnet display projects  and filter projects acourding to recived props\r\n * @param {string} props type of project 'completed , ongoing' , planed\r\n * @component\r\n * @see http://sadagaat-uk.org/projects\r\n */\r\nconst Projects = (props) => {\r\n  const [data, setData] = useState([]);\r\n  let [projects, setProjects] = useState(data);\r\n  let [currentPage, setCurrentPage] = useState(0);\r\n  let [projectsType, setProjectsType] = useState(0);\r\n  const [postsPerPage] = useState(6);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  let [Dates, SetSelectedDates] = useState({\r\n    startDate: \"01/01/2001\",\r\n    endDate: \"01/01/2025\",\r\n  });\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [alertOn, setAlert] = useState(false);\r\n  let [sortOn, setSortOn] = useState(false);\r\n  let [filterOn, setFilterOn] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  let [sorting, toggleSorting] = useState(false);\r\n  let [sortBtnFlip, toggleSortBtns] = useState(\"\");\r\n  const { t } = useTranslation();\r\n  //@example projectType = 'onging'\r\n  const projectType = props.type;\r\n  const projectProgressAlign = i18n.dir() === \"rtl\" ? \"right\" : \"left\";\r\n  const filterAlign = i18n.dir() === \"rtl\" ? \"float-right\" : \"float-left \";\r\n  const clearFilterClasses =\r\n    i18n.dir() === \"rtl\"\r\n      ? \"btn datePick-btn btn-theme\"\r\n      : \"btn datePick-btn btn-theme\";\r\n  const sorBtnClasses = i18n.dir() === \"rtl\" ? \" ml-0\" : \" mr-0\";\r\n  const iconDir = i18n.dir() === \"rtl\" ? \" mr-10\" : \" ml-10\";\r\n  function range(start, end) {\r\n    var ans = [];\r\n    for (let i = start; i >= end; i--) {\r\n      ans.push(i);\r\n    }\r\n    return ans;\r\n  }\r\n\r\n  /**\r\n   * Get all projects from API\r\n   */\r\n  async function fetchData() {\r\n    filterProjectsType(props.type);\r\n    let prefix = address();\r\n    let FilterUrl =\r\n      prefix +\r\n      \"projects/filtter?type=\" +\r\n      projectsType +\r\n      \"&page=\" +\r\n      currentPage +\r\n      \"&size=\" +\r\n      postsPerPage;\r\n    const fetcher = await window.fetch(\r\n      FilterUrl,\r\n      {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      },\r\n      {\r\n        items: (page) => page.results,\r\n        params: true,\r\n      }\r\n    );\r\n    const response = await fetcher.json();\r\n    console.log(response);\r\n    setData(response.data);\r\n    setTotalPages(response.totalPages);\r\n    setLoading(false);\r\n    console.log(Dates.endDate);\r\n  }\r\n\r\n  function SetDates() {\r\n    const today = new Date();\r\n    let dates = \"\";\r\n    if (\r\n      startDate !== null &&\r\n      startDate !== null &&\r\n      startDate <= today &&\r\n      endDate <= today &&\r\n      startDate <= endDate\r\n    ) {\r\n      Dates = {\r\n        startDate:\r\n          \"\" +\r\n          (startDate.getMonth() + 1) +\r\n          \"/\" +\r\n          startDate.getDate() +\r\n          \"/\" +\r\n          startDate.getFullYear(),\r\n        endDate:\r\n          \"\" +\r\n          (endDate.getMonth() + 1) +\r\n          \"/\" +\r\n          endDate.getDate() +\r\n          \"/\" +\r\n          endDate.getFullYear(),\r\n      };\r\n      SetSelectedDates(dates);\r\n      fetchDataFiltered();\r\n    }\r\n    ///\r\n    else {\r\n      showAlert();\r\n    }\r\n\r\n    console.log(dates);\r\n  }\r\n\r\n  function showAlert() {\r\n    setAlert(true);\r\n    setTimeout(function () {\r\n      setAlert(false);\r\n    }, 3000);\r\n  }\r\n\r\n  async function fetchDataFiltered() {\r\n    let isSorting;\r\n    if (document.getElementsByClassName(\"flip-v\") === undefined) {\r\n      isSorting = false;\r\n    } else isSorting = true;\r\n    filterProjectsType(props.type);\r\n    let prefix = address();\r\n    let FilterUrl =\r\n      prefix +\r\n      \"projects/search-order?\" +\r\n      \"startDate=\" +\r\n      Dates.startDate +\r\n      \"&endDate=\" +\r\n      Dates.endDate +\r\n      \"&status=\" +\r\n      projectType +\r\n      \"&inASEOrder=\" +\r\n      isSorting +\r\n      \"&page=\" +\r\n      currentPage +\r\n      \"&size=\" +\r\n      postsPerPage;\r\n    console.log(FilterUrl);\r\n    const fetcher = await window.fetch(\r\n      FilterUrl,\r\n      {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      },\r\n      {\r\n        items: (page) => page.results,\r\n        params: true,\r\n      }\r\n    );\r\n    const response = await fetcher.json();\r\n    console.log(response);\r\n    setData(response.data);\r\n    setTotalPages(response.totalPages);\r\n    setLoading(false);\r\n    console.log(Dates.endDate);\r\n  }\r\n  /**\r\n   * This function check the filter of Projects matching with type\r\n   * @param {string} type  type of project 'completed' ,'ongoing' , 'planned'\r\n   * @param {Array} allProjects  array of all projects\r\n   */\r\n  function datePickerCustom() {\r\n    const today = new Date();\r\n    const years = range(today.getFullYear(), 2000);\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let dateInputClasses =\r\n      i18n.dir() === \"rtl\" ? \"dateInput ml-5\" : \"dateInput\";\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-md-2 col-sm-3 col-xs-6\">\r\n          <DatePicker\r\n            selected={startDate}\r\n            className={dateInputClasses}\r\n            placeholderText={t(\"Select Start Date\")}\r\n            onChange={(date) => setStartDate(date)}\r\n            selectsStart\r\n            renderCustomHeader={({\r\n              date,\r\n              changeYear,\r\n              changeMonth,\r\n              decreaseMonth,\r\n              increaseMonth,\r\n              prevMonthButtonDisabled,\r\n              nextMonthButtonDisabled,\r\n            }) => (\r\n              <div\r\n                style={{\r\n                  margin: 10,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={decreaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                >\r\n                  {\"<\"}\r\n                </button>\r\n                <select\r\n                  value={date.getYear()}\r\n                  onChange={({ target: { value } }) => changeYear(value)}\r\n                >\r\n                  {years.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  value={months[date.getMonth()]}\r\n                  onChange={({ target: { value } }) =>\r\n                    changeMonth(months.indexOf(value))\r\n                  }\r\n                >\r\n                  {months.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <button\r\n                  onClick={increaseMonth}\r\n                  disabled={nextMonthButtonDisabled}\r\n                >\r\n                  {\">\"}\r\n                </button>\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2 col-sm-3 col-xs-6\">\r\n          <DatePicker\r\n            className={dateInputClasses}\r\n            placeholderText={t(\"Select End Date\")}\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            selectsEnd\r\n            renderCustomHeader={({\r\n              date,\r\n              changeYear,\r\n              changeMonth,\r\n              decreaseMonth,\r\n              increaseMonth,\r\n              prevMonthButtonDisabled,\r\n              nextMonthButtonDisabled,\r\n            }) => (\r\n              <div\r\n                style={{\r\n                  margin: 10,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={decreaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                >\r\n                  {\"<\"}\r\n                </button>\r\n                <select\r\n                  value={date.getYear()}\r\n                  onChange={({ target: { value } }) => changeYear(value)}\r\n                >\r\n                  {years.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <select\r\n                  value={months[date.getMonth()]}\r\n                  onChange={({ target: { value } }) =>\r\n                    changeMonth(months.indexOf(value))\r\n                  }\r\n                >\r\n                  {months.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <button\r\n                  onClick={increaseMonth}\r\n                  disabled={nextMonthButtonDisabled}\r\n                >\r\n                  {\">\"}\r\n                </button>\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  function clearFilter() {\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    filterOn = false;\r\n    fetchData();\r\n  }\r\n\r\n  function filterProjectsType(type) {\r\n    if (type === \"ongoing\") projectsType = 2;\r\n    if (type === \"completed\") projectsType = 1;\r\n    if (type === \"planned\") projectsType = 3;\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [props]);\r\n\r\n  // Change page\r\n  function paginate(pageNumber) {\r\n    console.log(pageNumber);\r\n    currentPage = pageNumber.selected;\r\n    console.log(currentPage);\r\n    if (filterOn === false) fetchData();\r\n    else fetchDataFiltered();\r\n  }\r\n\r\n  function filterBtnClasses() {\r\n    let filterBtn =\r\n      i18n.dir() === \"rtl\"\r\n        ? \"btn datePick-btn btn-theme-colored ml-5 \"\r\n        : \"btn datePick-btn btn-theme-colored mr-5 \";\r\n\r\n    if (startDate === null || endDate === null) {\r\n      filterBtn = filterBtn + \"disabled\";\r\n      filterOn = true;\r\n    }\r\n    return filterBtn;\r\n  }\r\n  function alertClasses() {\r\n    let classes = \"row fade-in \";\r\n    if (alertOn === false) classes = \"row fade-out d-none\";\r\n    return classes;\r\n  }\r\n\r\n  function hideAlert() {\r\n    setAlert(false);\r\n  }\r\n\r\n  let projectsPage = data;\r\n\r\n  function toggleSortBtn() {\r\n    if (sortBtnFlip === \"\") {\r\n      console.log(sorting);\r\n      toggleSortBtns(\" flip-v\");\r\n      data.reverse();\r\n    } else {\r\n      console.log(sorting);\r\n      toggleSortBtns(\"\");\r\n      data.reverse();\r\n    }\r\n  }\r\n\r\n  function pageProjects() {\r\n    let x = document.getElementsByClassName(\"flip-v\");\r\n    if (x === undefined && filterOn === false) {\r\n      return data;\r\n    } else return data.reverse();\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"dateSelect mb-50 pr-0\">\r\n            <div className=\"container\">\r\n              <div className={alertClasses()}>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"alert alert-danger alert-dismissible }\">\r\n                    <button type=\"button\" className=\"close\" onClick={hideAlert}>\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                    <p>{t(\"Please Choose Proper Dates\")}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                {datePickerCustom()}\r\n                <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n                  <div className={\"xs-mt-10 \" + filterAlign}>\r\n                    <button className={filterBtnClasses()} onClick={SetDates}>\r\n                      {t(\"Filter\")}\r\n                    </button>\r\n                    <button\r\n                      className={clearFilterClasses}\r\n                      onClick={clearFilter}\r\n                    >\r\n                      {t(\"Clear Filter\")}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 col-sm-12 col-xs-12 sm-mt-10 \">\r\n                  <button\r\n                    className={\"sort-btn d-inline \" + sorBtnClasses}\r\n                    onClick={toggleSortBtn}\r\n                  >\r\n                    {t(\"Sort By Date\") + \" \"}\r\n                    <i\r\n                      className={\r\n                        \"fa fa-sort-amount-desc flip-none \" +\r\n                        sortBtnFlip +\r\n                        iconDir\r\n                      }\r\n                    ></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {loading && <Preload loading={loading} />}\r\n          {data !== undefined && data.length > 0 ? (\r\n            data.map((project, index) => (\r\n              <div className=\"col-md-4 col-sm-6\" key={index}>\r\n                <Link to={\"/single-projects/\" + project.id}>\r\n                  <div\r\n                    className=\"causes bg-white mb-30 border-bottom\"\r\n                    style={{ height: \"600px\" }}\r\n                  >\r\n                    <div className=\"thumb\">\r\n                      <img\r\n                        src={`${address()}projects/${project.id}/image`}\r\n                        className=\"img-fullwidth\"\r\n                        width=\"100%\"\r\n                        height=\"260\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"causes-details clearfix p-15 pt-15 pb-15\">\r\n                      <ul className=\"list-inline font-16 font-weight-600 clearfix mb-5\">\r\n                        <li className=\"pull-left font-weight-400 text-black-333 pr-0\">\r\n                          {t(\"Raised\")}\r\n                          <span className=\"text-theme-colored font-weight-700\">\r\n                            {/* pass raise to getNumber function to   */}\r\n                            {getNumber(project.raised)}\r\n                          </span>\r\n                        </li>\r\n                        <li className=\"pull-right font-weight-400 text-black-333 pr-0\">\r\n                          {t(\"Goal\")}\r\n                          <span className=\"text-theme-colored font-weight-700\">\r\n                            {getNumber(project.goal)}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n\r\n                      <div className=\"progress-item mt-0\">\r\n                        {/* <span>{t('Donation Progress')}</span> */}\r\n                        <div className=\"progress\">\r\n                          <div\r\n                            data-percent={Precision(project.donationProgress)}\r\n                            className=\"progress-bar\"\r\n                          >\r\n                            <span className=\"percent\">\r\n                              {Precision(project.donationProgress)}%\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"progress-item mt-0\">\r\n                        <p\r\n                          className=\"\"\r\n                          style={{ textAlign: projectProgressAlign }}\r\n                        >\r\n                          {t(\"Project Progress\")}\r\n                        </p>\r\n                        <div className=\"progress\">\r\n                          <div\r\n                            data-percent={Precision(project.projectProgress)}\r\n                            className=\"progress-bar\"\r\n                          >\r\n                            <span className=\"percent\">\r\n                              {Precision(project.projectProgress)}%\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <h4 className=\"text-uppercase\">{project.name}</h4>\r\n\r\n                      <p className=\"mt-20 project-discription\">\r\n                        {parse(project.description)}\r\n                      </p>\r\n\r\n                      <Link\r\n                        to={\"/projects/\" + project.id}\r\n                        className=\"btn btn-default btn-theme-colored btn-xs font-16 mt-10\"\r\n                        style={{\r\n                          display: `${\r\n                            project.donationProgress >= 100 ? \"none\" : \"\"\r\n                          }`,\r\n                        }}\r\n                      >\r\n                        {t(\"Donate\")}\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h3 className=\"text-center\">\r\n              {t(\"No Available Results for Your Search\")}\r\n            </h3>\r\n          )}\r\n          {totalPages > 1 && (\r\n            <div style={{ position: \"absolute\", bottom: \"0%\" }}>\r\n              <ReactPaginate\r\n                previousLabel={t(\"prev\")}\r\n                nextLabel={t(\"next\")}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={totalPages}\r\n                marginPagesDisplayed={0}\r\n                pageRangeDisplayed={4}\r\n                onPageChange={paginate}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport Header from \"../sub_page_header\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Project from \".\";\r\n/**\r\n * This component returns planned projects\r\n * @component\r\n * * * @param {string} props Project type\r\n * @see https://sadagaat.com/planned-projects\r\n */\r\nfunction PlannedProjects() {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <Header name={t(\"Planned Projects\")} coverImage={\"projects-bg-img\"} />\r\n        <Project type=\"planned\" />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlannedProjects;\r\n"],"sourceRoot":""}