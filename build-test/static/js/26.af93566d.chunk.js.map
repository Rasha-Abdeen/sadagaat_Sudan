{"version":3,"sources":["components/news/index.js"],"names":["News","useState","data","setData","offset","setOffset","setCurrentPage","postsPerPage","t","useTranslation","i18n","dir","loading","setLoading","a","window","fetch","address","headers","language","fetcher","json","response","useEffect","fetchData","currentPosts","slice","Fragment","name","coverImage","className","class","map","news","key","id","to","style","maxHeight","src","height","width","alt","startDate","description","length","position","bottom","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selected","containerClassName","subContainerClassName","activeClassName"],"mappings":"2OAiIeA,UAnHf,WAAiB,IAAD,EACUC,mBAAS,IADnB,mBACPC,EADO,KACDC,EADC,OAEcF,mBAAS,GAFvB,mBAEPG,EAFO,KAECC,EAFD,OAGwBJ,mBAAS,GAHjC,mBAGMK,GAHN,aAISL,mBAAS,GAAzBM,EAJO,oBAKNC,EAAMC,cAAND,EALM,GAMAE,IAAKC,MACWV,oBAAS,IAPzB,mBAOPW,EAPO,KAOEC,EAPF,iDAiBd,8BAAAC,EAAA,sEACwBC,OAAOC,MAAP,UAAgBC,cAAhB,QAAiC,CACrDC,QAAS,CAAE,kBAAkB,GAAlB,OAAsBR,IAAKS,aAF1C,cACQC,EADR,gBAIyBA,EAAQC,OAJjC,OAIQC,EAJR,OAKEnB,EAAQmB,GACRT,GAAW,GANb,4CAjBc,sBASdU,qBAAU,YATI,mCAUZC,KACC,CAACd,IAAKS,WAgBT,IAAMM,EAAevB,EAAKwB,MAAMtB,EAAQA,EAASG,GAQjD,OACE,kBAAC,IAAMoB,SAAP,KACE,iCACE,kBAAC,IAAD,CAAQC,KAAMpB,EAAE,QAASqB,WAAY,gBAErC,yBAAKC,UAAU,qCACb,yBAAKC,MAAM,OACRnB,GAAW,kBAAC,IAAD,CAASA,QAASA,IAE7Ba,EAAaO,KAAI,SAACC,GAAD,OAChB,yBAAKF,MAAM,iBAAiBG,IAAKD,EAAKE,IACpC,kBAAC,IAAD,CAAMC,GAAI,SAAWH,EAAKE,IACxB,yBAAKJ,MAAM,0BACT,6BAASA,MAAM,sBACb,yBAAKA,MAAM,gBACT,yBACEA,MAAM,mBACNM,MAAO,CAAEC,UAAW,UAEpB,yBACEC,IAAG,UAAKtB,cAAL,gBAAsBgB,EAAKE,GAA3B,UACHL,UAAU,+BAEVO,MAAO,CAAEG,OAAQ,QAASC,MAAO,SACjCC,IAAI,OAKV,yBAAKX,MAAM,iBACT,yBAAKA,MAAM,0CACT,yBAAKA,MAAM,oBACT,yBAAKA,MAAM,gCACT,wBAAIA,MAAM,oBAAoBE,EAAKL,MAEnC,wBAAIE,UAAU,gCACXG,EAAKU,cAMd,uBACEb,UAAU,4BACVO,MAAO,CAAEG,OAAQ,UAEhBP,EAAKW,YAJR,aAcX1C,EAAK2C,OAAStC,GACb,yBAAK8B,MAAO,CAAES,SAAU,WAAYC,OAAQ,OAC1C,kBAAC,IAAD,CACEC,cAAexC,EAAE,QACjByC,UAAWzC,EAAE,QACb0C,WAAY,MACZC,eAAgB,WAChBC,UAAWC,KAAKC,KAAKpD,EAAK2C,OAAStC,GACnCgD,qBAAsB,EACtBC,mBAAoB,EACpBC,aAvEC,SAACC,GAChBpD,EAAeoD,EAAEC,UACjBtD,EAAUqD,EAAEC,SAAWpD,IAsETqD,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB","file":"static/js/26.af93566d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../sub_page_header\";\r\nimport address from \"./../utils/address\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Preload from \"../preload\";\r\n\r\n/**\r\n * This component display  all news in news page\r\n * @component\r\n * @see http://sadagaat-uk.org/news\r\n */\r\nfunction News() {\r\n  const [data, setData] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(6);\r\n  const { t } = useTranslation();\r\n  const style = i18n.dir() === \"rtl\" ? \"pull-right ml-20\" : \"pull-left mr-20\";\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [i18n.language]);\r\n\r\n  /**\r\n   * this function get news from APIs\r\n   * @returns {Array} array of news object\r\n   */\r\n  async function fetchData() {\r\n    const fetcher = await window.fetch(`${address()}news`, {\r\n      headers: { \"accept-language\": `${i18n.language}` },\r\n    });\r\n    const response = await fetcher.json();\r\n    setData(response);\r\n    setLoading(false);\r\n  }\r\n\r\n  // Get current posts\r\n  const currentPosts = data.slice(offset, offset + postsPerPage);\r\n\r\n  // Change page\r\n  const paginate = (e) => {\r\n    setCurrentPage(e.selected);\r\n    setOffset(e.selected * postsPerPage);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <Header name={t(\"News\")} coverImage={\"news-bg-img\"} />\r\n\r\n        <div className=\"container mt-30 mb-30 pt-30 pb-30\">\r\n          <div class=\"row\">\r\n            {loading && <Preload loading={loading} />}\r\n\r\n            {currentPosts.map((news) => (\r\n              <div class=\"col-md-4 mb-30\" key={news.id}>\r\n                <Link to={\"/news/\" + news.id}>\r\n                  <div class=\"blog-posts single-post\">\r\n                    <article class=\"post clearfix mb-0\">\r\n                      <div class=\"entry-header\">\r\n                        <div\r\n                          class=\"post-thumb thumb\"\r\n                          style={{ maxHeight: \"260px\" }}\r\n                        >\r\n                          <img\r\n                            src={`${address()}news/${news.id}/image`}\r\n                            className=\"img-fullwidth img-responsive\"\r\n                            // height=\"200\"\r\n                            style={{ height: \"260px\", width: \"390px\" }}\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"entry-content\">\r\n                        <div class=\"entry-meta media no-bg no-border mt-15\">\r\n                          <div class=\"media-body pl-15\">\r\n                            <div class=\"event-content pull-left flip\">\r\n                              <h2 class=\"line-bottom mt-0\">{news.name}</h2>\r\n\r\n                              <h4 className=\"mt-0 mb-0 text-theme-colored\">\r\n                                {news.startDate}\r\n                              </h4>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <p\r\n                          className=\"mb-15 project-discription\"\r\n                          style={{ height: \"100px\" }}\r\n                        >\r\n                          {news.description}.\r\n                        </p>\r\n\r\n                        {/* < SocialMedia /> */}\r\n                      </div>\r\n                    </article>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n            {data.length > postsPerPage && (\r\n              <div style={{ position: \"absolute\", bottom: \"0%\" }}>\r\n                <ReactPaginate\r\n                  previousLabel={t(\"prev\")}\r\n                  nextLabel={t(\"next\")}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"break-me\"}\r\n                  pageCount={Math.ceil(data.length / postsPerPage)}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={5}\r\n                  onPageChange={paginate}\r\n                  containerClassName={\"pagination\"}\r\n                  subContainerClassName={\"pages pagination\"}\r\n                  activeClassName={\"active\"}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default News;\r\n"],"sourceRoot":""}