{"version":3,"sources":["components/sub_hubs/single_suhub_projects.js","components/sub_hubs/single-subhub.jsx"],"names":["Projects","props","useState","data","setData","currentPage","projectsType","setProjectsType","postsPerPage","totalPages","setTotalPages","startDate","endDate","Dates","setOrderOn","filterOn","setFilterOn","loading","setLoading","t","useTranslation","projectId","projectProgressAlign","i18n","dir","fetchData","a","prefix","address","FilterUrl","console","log","window","fetch","headers","language","items","page","results","params","fetcher","json","response","fetchDataFiltered","undefined","document","getElementsByClassName","useEffect","className","length","clicked","x","cleared","ordered","type","filter","reverse","map","project","index","key","to","id","style","height","src","width","getNumber","raised","goal","data-percent","Precision","donationProgress","textAlign","projectProgress","name","parse","description","display","position","bottom","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","pageNumber","selected","containerClassName","subContainerClassName","activeClassName","SingleSubhub","paginate","e","setState","offset","state","subhub","projects","subhubId","this","match","subhub_id","axios","get","then","catch","error","total_donation","slice","Fragment","mxaHeight","alt","class","Component","withTranslation"],"mappings":"gVAgUeA,EA/SE,SAACC,GAAW,IAAD,EACFC,mBAAS,IADP,mBACnBC,EADmB,KACbC,EADa,OAEUF,mBAAS,GAFnB,mBAErBG,EAFqB,aAGYH,mBAAS,IAHrB,mBAGrBI,EAHqB,KAGPC,EAHO,OAIHL,mBAAS,GAAzBM,EAJmB,sBAKUN,mBAAS,GALnB,mBAKnBO,EALmB,KAKPC,EALO,OAMFR,mBAAS,CAC/BS,UAAW,aACXC,QAAS,eARe,mBAMrBC,EANqB,aAUEX,oBAAS,IAVX,mBAUZY,GAVY,aAWIZ,oBAAS,GAXb,mBAWrBa,EAXqB,KAWXC,EAXW,OAYId,oBAAS,GAZb,mBAYnBe,EAZmB,KAYVC,EAZU,KAalBC,EAAMC,cAAND,EAEFE,EAAYpB,EAAMoB,UAClBC,EAAsC,QAAfC,IAAKC,MAAkB,QAAU,OAhBpC,SAkDXC,IAlDW,2EAkD1B,kCAAAC,EAAA,6DACMC,EAASC,cACTC,EACFF,uCAGA,EACA,SACAtB,EACA,SACAG,EACA,aACAa,EACFS,QAAQC,IAAIF,GAbd,SAcwBG,OAAOC,MAC3BJ,EACA,CACEK,QAAS,CAAE,kBAAkB,GAAlB,OAAsBX,IAAKY,YAExC,CACEC,MAAO,SAACC,GAAD,OAAUA,EAAKC,SACtBC,QAAQ,IArBd,cAcQC,EAdR,gBAwByBA,EAAQC,OAxBjC,OAwBQC,EAxBR,OAyBEZ,QAAQC,IAAIW,GACZtC,EAAQsC,EAASvC,MACjBO,EAAcgC,EAASjC,YACvBS,GAAW,GACXY,QAAQC,IAAIlB,EAAMD,SA7BpB,6CAlD0B,+BAiFX+B,IAjFW,2EAiF1B,kCAAAjB,EAAA,kEAEoDkB,IAA9CC,SAASC,uBAAuB,UAGhCnB,EAASC,cAGXC,EADsB,eAApBhB,EAAMF,WAAgD,eAAlBE,EAAMD,QAE1Ce,kCAGArB,EACA,gBACA,EACA,SACAD,EACA,SACAG,EACA,aACAa,EAGAM,qCAGAd,EAAMF,UACN,YACAE,EAAMD,QACN,WACAN,EACA,gBACA,EACA,SACAD,EACA,SACAG,EACA,aACAa,EAEJS,QAAQC,IAAIF,GAxCd,SAyCwBG,OAAOC,MAC3BJ,EACA,CACEK,QAAS,CAAE,kBAAkB,GAAlB,OAAsBX,IAAKY,YAExC,CACEC,MAAO,SAACC,GAAD,OAAUA,EAAKC,SACtBC,QAAQ,IAhDd,cAyCQC,EAzCR,gBAmDyBA,EAAQC,OAnDjC,OAmDQC,EAnDR,OAoDEZ,QAAQC,IAAIW,GACZtC,EAAQsC,EAASvC,MACjBO,EAAcgC,EAASjC,YACvBS,GAAW,GACXY,QAAQC,IAAIlB,EAAMD,SAxDpB,6CAjF0B,sBA0K1B,OApBAmC,qBAAU,WACRtB,MACC,CAACxB,IAmBF,iCACE,yBAAK+C,UAAU,kBACFJ,IAATzC,GAAsBA,EAAK8C,OAAS,IAAmB,IAAblC,EAC1C,yBAAKiC,UAAU,OACb,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CACEE,QA/Jd,SAA0BC,GACxBtC,EAAMF,UAAYwC,EAAExC,UACpBE,EAAMD,QAAUuC,EAAEvC,QAClBkB,QAAQC,IAAIlB,GACZG,GAAY,IA4JAoC,QA9Id,WACEpC,GAAY,GACZS,KA6IY4B,QA1Jd,SAAkBF,GAChBrC,EAAWqC,IA0JCG,KAvJd,SAAiBH,GACfrB,QAAQC,IAAIoB,GACZ7C,EAAe6C,EACf5C,EAAgB4C,IAqJJI,OA7Id,SAAoBJ,IACR,IAANA,IACFnC,GAAY,GACZ2B,UA8IM,KACJ,yBAAKK,UAAU,OACZ/B,GAAW,kBAAC,IAAD,CAASA,QAASA,SACpB2B,IAATzC,GAAsBA,EAAK8C,OAAS,QAvBjCL,IADFC,SAASC,uBAAuB,YACJ,IAAb/B,EACdZ,EACKA,EAAKqD,WAsBIC,KAAI,SAACC,EAASC,GAAV,OACjB,yBAAKX,UAAU,oBAAoBY,IAAKD,GACtC,kBAAC,IAAD,CAAME,GAAI,oBAAsBH,EAAQI,IACtC,yBACEd,UAAU,sCACVe,MAAO,CAAEC,OAAQ,UAEjB,yBAAKhB,UAAU,SACb,yBACEiB,IAAG,UAAKrC,cAAL,oBAA0B8B,EAAQI,GAAlC,UACHd,UAAU,gBACVkB,MAAM,OACNF,OAAO,SAIX,yBAAKhB,UAAU,4CACb,wBAAIA,UAAU,qDACZ,wBAAIA,UAAU,iDACX7B,EAAE,UACH,0BAAM6B,UAAU,sCAEbmB,YAAUT,EAAQU,UAGvB,wBAAIpB,UAAU,kDACX7B,EAAE,QACH,0BAAM6B,UAAU,sCACbmB,YAAUT,EAAQW,SAKzB,yBAAKrB,UAAU,sBAEb,yBAAKA,UAAU,YACb,yBACEsB,eAAcC,YAAUb,EAAQc,kBAChCxB,UAAU,gBAEV,0BAAMA,UAAU,WACbuB,YAAUb,EAAQc,kBADrB,QAMN,yBAAKxB,UAAU,sBACb,uBACEA,UAAU,GACVe,MAAO,CAAEU,UAAWnD,IAEnBH,EAAE,qBAEL,yBAAK6B,UAAU,YACb,yBACEsB,eAAcC,YAAUb,EAAQgB,iBAChC1B,UAAU,gBAEV,0BAAMA,UAAU,WACbuB,YAAUb,EAAQgB,iBADrB,QAON,wBAAI1B,UAAU,kBAAkBU,EAAQiB,MAExC,uBAAG3B,UAAU,6BACV4B,IAAMlB,EAAQmB,cAEjB,kBAAC,IAAD,CACEhB,GAAI,aAAeH,EAAQI,GAC3Bd,UAAU,yDACVe,MAAO,CACLe,QAAQ,GAAD,OACLpB,EAAQc,kBAAoB,IAAM,OAAS,MAI9CrD,EAAE,kBAQf,wBAAI6B,UAAU,eACX7B,EAAE,yCAGNV,EAAa,GACZ,yBAAKsD,MAAO,CAAEgB,SAAU,WAAYC,OAAQ,OAC1C,kBAAC,IAAD,CACEC,cAAe9D,EAAE,QACjB+D,UAAW/D,EAAE,QACbgE,WAAY,MACZC,eAAgB,WAChBC,UAAW5E,EACX6E,qBAAsB,EACtBC,mBAAoB,EACpBC,aAvId,SAAkBC,GAChB3D,QAAQC,IAAI0D,GACZpF,EAAcoF,EAAWC,SACzB5D,QAAQC,IAAI1B,IACK,IAAbU,EAAoBU,IACnBkB,KAmIOgD,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,gB,ICpS3BC,E,keACJ,aAAe,IAAD,8BACZ,gBAiFFC,SAAW,SAACC,GACV,EAAKC,SAAS,CACZ5F,YAAa2F,EAAEN,SACfQ,OAAQF,EAAEN,SAAW,EAAKS,MAAM3F,gBAnFlC,EAAK2F,MAAQ,CACXC,OAAQ,GACRC,SAAU,GACVH,OAAQ,EACR7F,YAAa,EACbG,aAAc,EACd8F,SAAU,GARA,E,8LAkBRxC,EAAKyC,KAAKtG,MAAMuG,MAAMjE,OAAOkE,UACjCF,KAAKN,SAAS,CAAEK,SAAUxC,IAC1BhC,QAAQC,IAAIwE,KAAKJ,MAAM9E,W,SACjBqF,IACHC,IADG,UACI/E,cADJ,mBACwBkC,GAAM,CAChC5B,QAAS,CAAE,kBAAkB,GAAlB,OAAsBX,IAAKY,aAGvCyE,MAAK,SAAClE,GACL,IAAM0D,EAAS1D,EAASvC,KACxB,EAAK8F,SAAS,CAAEG,cAEjBS,OAAM,SAACC,O,uBAIJJ,IACHC,IADG,UACI/E,cADJ,mBACwBkC,EADxB,aACuC,CACzC5B,QAAS,CAAE,kBAAkB,GAAlB,OAAsBX,IAAKY,aAGvCyE,MAAK,SAAClE,GACL,IAAM2D,EAAW3D,EAASvC,KAC1B,EAAK8F,SAAS,CAAEI,aAChBvE,QAAQC,IAAIsE,MAEbQ,OAAM,SAACC,O,sRAQNhD,EAAKyC,KAAKtG,MAAMuG,MAAMjE,OAAOkE,U,SAE3BC,IACHC,IADG,UACI/E,cADJ,mBACwBkC,GAAM,CAChC5B,QAAS,CAAE,kBAAkB,GAAlB,OAAsBX,IAAKY,aAGvCyE,MAAK,SAAClE,GACL,IAAM0D,EAAS1D,EAASvC,KACxB,EAAK8F,SAAS,CAAEG,cAEjBS,OAAM,SAACC,O,uBAIJJ,IACHC,IADG,UACI/E,cADJ,mBACwBkC,EADxB,aACuC,CACzC5B,QAAS,CAAE,kBAAkB,GAAlB,OAAsBX,IAAKY,aAGvCyE,MAAK,SAAClE,GACL,IAAM2D,EAAW3D,EAASvC,KAC1B,EAAK8F,SAAS,CAAEI,gBAEjBQ,OAAM,SAACC,O,qIAaF,IACA3F,EAAMoF,KAAKtG,MAAXkB,EACAiF,EAAWG,KAAKJ,MAAhBC,OACAC,EAAaE,KAAKJ,MAAlBE,SACcD,EAAOW,eAERV,EAASW,MAC5BT,KAAKJ,MAAMD,OACXK,KAAKJ,MAAMD,OAASK,KAAKJ,MAAM3F,cAEJe,IAAKC,MAElC,OACE,kBAAC,IAAMyF,SAAP,KACE,iCACE,yBAAKjE,UAAU,aACb,yBAAKA,UAAU,0BACb,6BACE,yBAAKA,UAAU,gCACb,6BAEA,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACb,yBACEA,UAAU,mBACVe,MAAO,CAAEmD,UAAW,UAEpB,yBACElE,UAAU,iBACViB,IAAG,UAAKrC,cAAL,mBAAyBwE,EAAOtC,GAAhC,UACHqD,IAAI,eACJpD,MAAO,CAAEC,OAAQ,QAASE,MAAO,aAIvC,yBAAKkD,MAAM,2BACT,wBAAIA,MAAM,oBAAoBhB,EAAOzB,MAErC,2BAAIyB,EAAOvB,aAEX,yBAAKuC,MAAM,eACT,wBAAIA,MAAM,8BACR,wBAAIA,MAAM,8CAGd,kBAAC,IAAD,CACEvD,GAAI,aAAeuC,EAAOtC,GAC1BsD,MAAM,gCAELjG,EAAE,uBAUrB,6BAGA,kBAAC,EAAD,CAAUE,UAAWkF,KAAKtG,MAAMuG,MAAMjE,OAAOkE,mB,GA3J9BY,aAkKZC,wBAAkBxB","file":"static/js/28.3a0d4e3f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport address from \"../utils/address\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Precision, getNumber } from \"../events/getMonthName\";\r\nimport parse from \"html-react-parser\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Preload from \"../preload\";\r\nimport Filters from \"../ProjectsFilter/filter\";\r\n/**\r\n * this componnet display projects  and filter projects acourding to recived props\r\n * @param {string} props type of project 'completed , ongoing' , planed\r\n * @component\r\n * @see http://sadagaat-uk.org/projects\r\n */\r\nconst Projects = (props) => {\r\n  const [data, setData] = useState([]);\r\n  let [currentPage, setCurrentPage] = useState(0);\r\n  let [projectsType, setProjectsType] = useState(0);\r\n  const [postsPerPage] = useState(6);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  let [Dates, GetDates] = useState({\r\n    startDate: \"01/01/2001\",\r\n    endDate: \"01/01/2025\",\r\n  });\r\n  let [orderOn, setOrderOn] = useState(false);\r\n  let [filterOn, setFilterOn] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const { t } = useTranslation();\r\n  //@example projectType = 'onging'\r\n  const projectId = props.projectId;\r\n  const projectProgressAlign = i18n.dir() === \"rtl\" ? \"right\" : \"left\";\r\n\r\n  function GetSelectedDates(x) {\r\n    Dates.startDate = x.startDate;\r\n    Dates.endDate = x.endDate;\r\n    console.log(Dates);\r\n    setFilterOn(true);\r\n  }\r\n\r\n  function getOrder(x) {\r\n    setOrderOn(x);\r\n  }\r\n\r\n  function getType(x) {\r\n    console.log(x);\r\n    projectsType = x;\r\n    setProjectsType(x);\r\n    // filterOn = true;\r\n  }\r\n\r\n  function clearFilter() {\r\n    setFilterOn(false);\r\n    fetchData();\r\n  }\r\n  function filterData(x) {\r\n    if (x === true) {\r\n      setFilterOn(true);\r\n      fetchDataFiltered();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all projects from API\r\n   */\r\n  async function fetchData() {\r\n    let prefix = address();\r\n    let FilterUrl =\r\n      prefix +\r\n      \"projects/search-order?\" +\r\n      \"inASEOrder=\" +\r\n      false +\r\n      \"&page=\" +\r\n      currentPage +\r\n      \"&size=\" +\r\n      postsPerPage +\r\n      \"&subhubId=\" +\r\n      projectId;\r\n    console.log(FilterUrl);\r\n    const fetcher = await window.fetch(\r\n      FilterUrl,\r\n      {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      },\r\n      {\r\n        items: (page) => page.results,\r\n        params: true,\r\n      }\r\n    );\r\n    const response = await fetcher.json();\r\n    console.log(response);\r\n    setData(response.data);\r\n    setTotalPages(response.totalPages);\r\n    setLoading(false);\r\n    console.log(Dates.endDate);\r\n  }\r\n  async function fetchDataFiltered() {\r\n    let sorting;\r\n    if (document.getElementsByClassName(\"flip-v\") === undefined) {\r\n      sorting = false;\r\n    } else sorting = true;\r\n    let prefix = address();\r\n    let FilterUrl;\r\n    if (Dates.startDate === \"01/01/2001\" && Dates.endDate === \"01/01/2025\") {\r\n      FilterUrl =\r\n        prefix +\r\n        \"projects/search-order?\" +\r\n        \"status=\" +\r\n        projectsType +\r\n        \"&inASEOrder=\" +\r\n        false +\r\n        \"&page=\" +\r\n        currentPage +\r\n        \"&size=\" +\r\n        postsPerPage +\r\n        \"&subhubId=\" +\r\n        projectId;\r\n    } else {\r\n      FilterUrl =\r\n        prefix +\r\n        \"projects/search-order?\" +\r\n        \"startDate=\" +\r\n        Dates.startDate +\r\n        \"&endDate=\" +\r\n        Dates.endDate +\r\n        \"&status=\" +\r\n        projectsType +\r\n        \"&inASEOrder=\" +\r\n        false +\r\n        \"&page=\" +\r\n        currentPage +\r\n        \"&size=\" +\r\n        postsPerPage +\r\n        \"&subhubId=\" +\r\n        projectId;\r\n    }\r\n    console.log(FilterUrl);\r\n    const fetcher = await window.fetch(\r\n      FilterUrl,\r\n      {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      },\r\n      {\r\n        items: (page) => page.results,\r\n        params: true,\r\n      }\r\n    );\r\n    const response = await fetcher.json();\r\n    console.log(response);\r\n    setData(response.data);\r\n    setTotalPages(response.totalPages);\r\n    setLoading(false);\r\n    console.log(Dates.endDate);\r\n  }\r\n  /**\r\n   * This function check the filter of Projects matching with type\r\n   * @param {string} type  type of project 'completed' ,'ongoing' , 'planned'\r\n   * @param {Array} allProjects  array of all projects\r\n   */\r\n\r\n  function filterProjectsType(type) {\r\n    if (type === \"ongoing\") projectsType = 2;\r\n    if (type === \"completed\") projectsType = 1;\r\n    if (type === \"planned\") projectsType = 3;\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [props]);\r\n\r\n  // Change page\r\n  function paginate(pageNumber) {\r\n    console.log(pageNumber);\r\n    currentPage = pageNumber.selected;\r\n    console.log(currentPage);\r\n    if (filterOn === false) fetchData();\r\n    else fetchDataFiltered();\r\n  }\r\n\r\n  function pageProjects() {\r\n    let x = document.getElementsByClassName(\"flip-v\");\r\n    if (x === undefined && filterOn === false) {\r\n      return data;\r\n    } else return data.reverse();\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container\">\r\n        {(data !== undefined && data.length > 0) || filterOn === true ? (\r\n          <div className=\"row\">\r\n            <div className=\"dateSelect mb-50 pr-0\">\r\n              <Filters\r\n                clicked={GetSelectedDates}\r\n                cleared={clearFilter}\r\n                ordered={getOrder}\r\n                type={getType}\r\n                filter={filterData}\r\n              ></Filters>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"row\">\r\n          {loading && <Preload loading={loading} />}\r\n          {data !== undefined && data.length > 0 ? (\r\n            pageProjects().map((project, index) => (\r\n              <div className=\"col-md-4 col-sm-6\" key={index}>\r\n                <Link to={\"/single-projects/\" + project.id}>\r\n                  <div\r\n                    className=\"causes bg-white mb-30 border-bottom\"\r\n                    style={{ height: \"600px\" }}\r\n                  >\r\n                    <div className=\"thumb\">\r\n                      <img\r\n                        src={`${address()}projects/${project.id}/image`}\r\n                        className=\"img-fullwidth\"\r\n                        width=\"100%\"\r\n                        height=\"260\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"causes-details clearfix p-15 pt-15 pb-15\">\r\n                      <ul className=\"list-inline font-16 font-weight-600 clearfix mb-5\">\r\n                        <li className=\"pull-left font-weight-400 text-black-333 pr-0\">\r\n                          {t(\"Raised\")}\r\n                          <span className=\"text-theme-colored font-weight-700\">\r\n                            {/* pass raise to getNumber function to   */}\r\n                            {getNumber(project.raised)}\r\n                          </span>\r\n                        </li>\r\n                        <li className=\"pull-right font-weight-400 text-black-333 pr-0\">\r\n                          {t(\"Goal\")}\r\n                          <span className=\"text-theme-colored font-weight-700\">\r\n                            {getNumber(project.goal)}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n\r\n                      <div className=\"progress-item mt-0\">\r\n                        {/* <span>{t('Donation Progress')}</span> */}\r\n                        <div className=\"progress\">\r\n                          <div\r\n                            data-percent={Precision(project.donationProgress)}\r\n                            className=\"progress-bar\"\r\n                          >\r\n                            <span className=\"percent\">\r\n                              {Precision(project.donationProgress)}%\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"progress-item mt-0\">\r\n                        <p\r\n                          className=\"\"\r\n                          style={{ textAlign: projectProgressAlign }}\r\n                        >\r\n                          {t(\"Project Progress\")}\r\n                        </p>\r\n                        <div className=\"progress\">\r\n                          <div\r\n                            data-percent={Precision(project.projectProgress)}\r\n                            className=\"progress-bar\"\r\n                          >\r\n                            <span className=\"percent\">\r\n                              {Precision(project.projectProgress)}%\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <h4 className=\"text-uppercase\">{project.name}</h4>\r\n\r\n                      <p className=\"mt-20 project-discription\">\r\n                        {parse(project.description)}\r\n                      </p>\r\n                      <Link\r\n                        to={\"/projects/\" + project.id}\r\n                        className=\"btn btn-default btn-theme-colored btn-xs font-16 mt-10\"\r\n                        style={{\r\n                          display: `${\r\n                            project.donationProgress >= 100 ? \"none\" : \"\"\r\n                          }`,\r\n                        }}\r\n                      >\r\n                        {t(\"Donate\")}\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h3 className=\"text-center\">\r\n              {t(\"No Available Results for Your Search\")}\r\n            </h3>\r\n          )}\r\n          {totalPages > 1 && (\r\n            <div style={{ position: \"absolute\", bottom: \"0%\" }}>\r\n              <ReactPaginate\r\n                previousLabel={t(\"prev\")}\r\n                nextLabel={t(\"next\")}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={totalPages}\r\n                marginPagesDisplayed={0}\r\n                pageRangeDisplayed={4}\r\n                onPageChange={paginate}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\nimport address from \"../utils/address\";\r\nimport axios from \"axios\";\r\nimport i18n from \"i18next\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Precision, getNumber } from \"../events/getMonthName\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport parse from \"html-react-parser\";\r\nimport Projects from \"./single_suhub_projects\";\r\n\r\n/**\r\n * This comoponent display subHub information  and Project related to this subhub\r\n * @component\r\n * @see http://sadagaat-uk.org/single-subhub/1849\r\n */\r\n\r\nclass SingleSubhub extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      subhub: [],\r\n      projects: [],\r\n      offset: 0,\r\n      currentPage: 1,\r\n      postsPerPage: 6,\r\n      subhubId: 0,\r\n    };\r\n  }\r\n  /**\r\n   * Get shub information from APIs\r\n   * Get Projects that related to specific subhub\r\n   */\r\n\r\n  async componentDidMount() {\r\n    //  Get id of subhub from url\r\n    let id = this.props.match.params.subhub_id;\r\n    this.setState({ subhubId: id });\r\n    console.log(this.state.projectId);\r\n    await axios\r\n      .get(`${address()}subHubs/${id}`, {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      })\r\n\r\n      .then((response) => {\r\n        const subhub = response.data;\r\n        this.setState({ subhub });\r\n      })\r\n      .catch((error) => {\r\n        // alert(error.message)\r\n      });\r\n\r\n    await axios\r\n      .get(`${address()}subHubs/${id}/projects`, {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      })\r\n\r\n      .then((response) => {\r\n        const projects = response.data;\r\n        this.setState({ projects });\r\n        console.log(projects);\r\n      })\r\n      .catch((error) => {\r\n        // alert(error.message)\r\n      });\r\n  }\r\n  /**\r\n   * Function call when change props Like  switch language\r\n   */\r\n  async componentWillReceiveProps() {\r\n    let id = this.props.match.params.subhub_id;\r\n\r\n    await axios\r\n      .get(`${address()}subHubs/${id}`, {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      })\r\n\r\n      .then((response) => {\r\n        const subhub = response.data;\r\n        this.setState({ subhub });\r\n      })\r\n      .catch((error) => {\r\n        // alert(error.message)\r\n      });\r\n\r\n    await axios\r\n      .get(`${address()}subHubs/${id}/projects`, {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      })\r\n\r\n      .then((response) => {\r\n        const projects = response.data;\r\n        this.setState({ projects });\r\n      })\r\n      .catch((error) => {\r\n        // alert(error.message)\r\n      });\r\n  }\r\n\r\n  // Change page\r\n  paginate = (e) => {\r\n    this.setState({\r\n      currentPage: e.selected,\r\n      offset: e.selected * this.state.postsPerPage,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const { subhub } = this.state;\r\n    const { projects } = this.state;\r\n    const totalDonation = subhub.total_donation;\r\n\r\n    const currentPosts = projects.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.postsPerPage\r\n    );\r\n    const projectProgressAlign = i18n.dir() === \"rtl\" ? \"right\" : \"left\";\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row multi-row-clearfix\">\r\n              <div>\r\n                <div className=\"col-xs-12 col-sm-6 col-md-12\">\r\n                  <h2></h2>\r\n\r\n                  <div className=\"event media sm-maxwidth400 border-bottom mt-5 mb-0 pt-10 pb-15\">\r\n                    <div className=\"row\">\r\n                      <div className=\"causes\">\r\n                        <div className=\"row-fluid\">\r\n                          <div className=\"col-md-6\">\r\n                            <div\r\n                              className=\"post-thumb thumb\"\r\n                              style={{ mxaHeight: \"600px\" }}\r\n                            >\r\n                              <img\r\n                                className=\"img-responsive\"\r\n                                src={`${address()}subHubs/${subhub.id}/image`}\r\n                                alt=\"subhub image\"\r\n                                style={{ height: \"400px\", width: \"500px\" }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"causes-details col-md-6\">\r\n                            <h2 class=\"line-bottom mt-0\">{subhub.name}</h2>\r\n\r\n                            <p>{subhub.description}</p>\r\n\r\n                            <div class=\"mt-10 mb-20\">\r\n                              <ul class=\"list-inline clearfix mt-10\">\r\n                                <li class=\"text-theme-colored pull-right flip pr-0\"></li>\r\n                              </ul>\r\n                            </div>\r\n                            <Link\r\n                              to={\"/sub_hubs/\" + subhub.id}\r\n                              class=\"btn btn-theme-colored btn-sm\"\r\n                            >\r\n                              {t(\"Donate Now\")}\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br />\r\n\r\n            {/* Projects related to subhub */}\r\n            <Projects projectId={this.props.match.params.subhub_id} />\r\n          </div>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withTranslation()(SingleSubhub);\r\n"],"sourceRoot":""}