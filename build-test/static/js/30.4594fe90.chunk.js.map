{"version":3,"sources":["components/projects/DateSelect.js","components/vlounteers/volunteers-programs.js","components/vlounteers/programs.js"],"names":["DateSelected","props","t","useTranslation","useState","alertOn","setAlert","startDate","setStartDate","endDate","setEndDate","filterAlign","i18n","dir","btnColClasses","clearFilterClasses","className","classes","alertClasses","type","onClick","aria-hidden","years","start","end","ans","i","push","range","Date","getFullYear","months","dateInputClasses","Fragment","selected","placeholderText","onChange","date","selectsStart","renderCustomHeader","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","style","margin","display","justifyContent","disabled","value","getYear","target","map","option","key","getMonth","indexOf","selectsEnd","datePickerCustom","filterBtn","filterBtnClasses","GetSelectedDates","clicked","today","Dates","getDate","setTimeout","console","log","clearFilter","cleared","VolunteerPrograms","data","setData","currentPage","postsPerPage","totalPages","setTotalPages","filterOn","loading","setLoading","fetchData","a","filterProjectsType","prefix","address","FilterUrl","window","fetch","headers","language","items","page","results","params","fetcher","json","response","fetchDataFiltered","progress","x","y","useEffect","DateSelect","undefined","length","program","index","id","to","height","src","width","subscribed","data-percent","Precision","name","parse","description","position","bottom","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","pageNumber","containerClassName","subContainerClassName","activeClassName","Programs","coverImage"],"mappings":"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","file":"static/js/30.4594fe90.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DateSelected = (props) => {\r\n  const { t } = useTranslation();\r\n  const [alertOn, setAlert] = useState(false);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const filterAlign =\r\n    i18n.dir() === \"rtl\" ? \"row float-left\" : \"row float-right\";\r\n  const btnColClasses =\r\n    i18n.dir() === \"rtl\" ? \"col-md-4 col-sm-6 pl-0\" : \"col-md-4 col-sm-6 pr-0\";\r\n  const clearFilterClasses =\r\n    i18n.dir() === \"rtl\"\r\n      ? \"btn datePick-btn btn-theme ml-0\"\r\n      : \"btn datePick-btn btn-theme mr-0\";\r\n  function range(start, end) {\r\n    var ans = [];\r\n    for (let i = start; i >= end; i--) {\r\n      ans.push(i);\r\n    }\r\n    return ans;\r\n  }\r\n  function datePickerCustom() {\r\n    const today = new Date();\r\n    const years = range(today.getFullYear(), 2000);\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let dateInputClasses =\r\n      i18n.dir() === \"rtl\" ? \"dateInput ml-5\" : \"dateInput\";\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-md-4 col-sm-4\">\r\n          <DatePicker\r\n            selected={startDate}\r\n            className={dateInputClasses}\r\n            placeholderText={t(\"Select Start Date\")}\r\n            onChange={(date) => setStartDate(date)}\r\n            selectsStart\r\n            renderCustomHeader={({\r\n              date,\r\n              changeYear,\r\n              changeMonth,\r\n              decreaseMonth,\r\n              increaseMonth,\r\n              prevMonthButtonDisabled,\r\n              nextMonthButtonDisabled,\r\n            }) => (\r\n              <div\r\n                style={{\r\n                  margin: 10,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={decreaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                >\r\n                  {\"<\"}\r\n                </button>\r\n                <select\r\n                  value={date.getYear()}\r\n                  onChange={({ target: { value } }) => changeYear(value)}\r\n                >\r\n                  {years.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <select\r\n                  value={months[date.getMonth()]}\r\n                  onChange={({ target: { value } }) =>\r\n                    changeMonth(months.indexOf(value))\r\n                  }\r\n                >\r\n                  {months.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <button\r\n                  onClick={increaseMonth}\r\n                  disabled={nextMonthButtonDisabled}\r\n                >\r\n                  {\">\"}\r\n                </button>\r\n              </div>\r\n            )}\r\n            // selected={startDate}\r\n            // onChange={(date) => setStartDate(date)}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4 col-sm-4\">\r\n          <DatePicker\r\n            className={dateInputClasses}\r\n            placeholderText={t(\"Select End Date\")}\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            selectsEnd\r\n            renderCustomHeader={({\r\n              date,\r\n              changeYear,\r\n              changeMonth,\r\n              decreaseMonth,\r\n              increaseMonth,\r\n              prevMonthButtonDisabled,\r\n              nextMonthButtonDisabled,\r\n            }) => (\r\n              <div\r\n                style={{\r\n                  margin: 10,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={decreaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                >\r\n                  {\"<\"}\r\n                </button>\r\n                <select\r\n                  value={date.getYear()}\r\n                  onChange={({ target: { value } }) => changeYear(value)}\r\n                >\r\n                  {years.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <select\r\n                  value={months[date.getMonth()]}\r\n                  onChange={({ target: { value } }) =>\r\n                    changeMonth(months.indexOf(value))\r\n                  }\r\n                >\r\n                  {months.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <button\r\n                  onClick={increaseMonth}\r\n                  disabled={nextMonthButtonDisabled}\r\n                >\r\n                  {\">\"}\r\n                </button>\r\n              </div>\r\n            )}\r\n            // selected={startDate}\r\n            // onChange={(date) => setEndDate(date)}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  function clearFilterBtn() {\r\n    let clearFilter = props.cleared;\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    clearFilter();\r\n  }\r\n\r\n  function showAlert() {\r\n    setAlert(true);\r\n    setTimeout(function () {\r\n      setAlert(false);\r\n    }, 3000);\r\n  }\r\n\r\n  function sendSelectedDates() {\r\n    let GetSelectedDates = props.clicked;\r\n    const today = new Date();\r\n    let Dates = \"\";\r\n    if (\r\n      startDate !== null &&\r\n      startDate !== null &&\r\n      startDate <= today &&\r\n      endDate <= today &&\r\n      startDate <= endDate\r\n    ) {\r\n      Dates = {\r\n        startDate:\r\n          \"\" +\r\n          (startDate.getMonth() + 1) +\r\n          \"/\" +\r\n          startDate.getDate() +\r\n          \"/\" +\r\n          startDate.getFullYear(),\r\n        endDate:\r\n          \"\" +\r\n          (endDate.getMonth() + 1) +\r\n          \"/\" +\r\n          endDate.getDate() +\r\n          \"/\" +\r\n          endDate.getFullYear(),\r\n      };\r\n      GetSelectedDates(Dates);\r\n    }\r\n    ///\r\n    else {\r\n      showAlert();\r\n    }\r\n\r\n    console.log(Dates);\r\n  }\r\n\r\n  function filterBtnClasses() {\r\n    let filterBtn =\r\n      i18n.dir() === \"rtl\"\r\n        ? \"btn datePick-btn btn-theme-colored ml-5 \"\r\n        : \"btn datePick-btn btn-theme-colored mr-5 \";\r\n\r\n    if (startDate === null || endDate === null)\r\n      filterBtn = filterBtn + \"disabled\";\r\n    return filterBtn;\r\n  }\r\n  function alertClasses() {\r\n    let classes = \"row fade-in \";\r\n    if (alertOn === false) classes = \"row fade-out d-none\";\r\n    return classes;\r\n  }\r\n\r\n  function hideAlert() {\r\n    setAlert(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={alertClasses()}>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"alert alert-danger alert-dismissible }\">\r\n            <button type=\"button\" className=\"close\" onClick={hideAlert}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <p>{t(\"Please Choose Proper Dates\")}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={filterAlign}>\r\n        {datePickerCustom()}\r\n        <div className={btnColClasses}>\r\n          <button className={filterBtnClasses()} onClick={sendSelectedDates}>\r\n            {t(\"Filter\")}\r\n          </button>\r\n          <button className={clearFilterClasses} onClick={clearFilterBtn}>\r\n            {t(\"Clear Filter\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateSelected;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport address from \"../utils/address\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Precision, getNumber } from \"../events/getMonthName\";\r\nimport parse from \"html-react-parser\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Preload from \"../preload\";\r\nimport DateSelected from \"../projects/DateSelect\";\r\n\r\n/**\r\n * this componnet display projects  and filter projects acourding to recived props\r\n * @param {string} props type of project 'completed , ongoing' , planed\r\n * @component\r\n * @see http://sadagaat-uk.org/projects\r\n */\r\nconst VolunteerPrograms = (props) => {\r\n  const [data, setData] = useState([]);\r\n  let currentPage = 0;\r\n  let [projectsType, setProjectsType] = useState(0);\r\n  const [postsPerPage] = useState(6);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  let [Dates, GetDates] = useState({\r\n    startDate: \"01/01/2001\",\r\n    endDate: \"01/01/2025\",\r\n  });\r\n  let [filterOn, setFilterOn] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const { t } = useTranslation();\r\n\r\n  function GetSelectedDates(x) {\r\n    Dates.startDate = x.startDate;\r\n    Dates.endDate = x.endDate;\r\n    console.log(Dates);\r\n    filterOn = true;\r\n    fetchDataFiltered();\r\n  }\r\n\r\n  function clearFilter() {\r\n    filterOn = false;\r\n    fetchData();\r\n  }\r\n  /**\r\n   * Get all projects from API\r\n   */\r\n  async function fetchData() {\r\n    filterProjectsType(props.type);\r\n    let prefix = address();\r\n    let FilterUrl =\r\n      prefix + \"programs?\" + \"page=\" + currentPage + \"&size=\" + postsPerPage;\r\n    console.log(FilterUrl);\r\n    const fetcher = await window.fetch(\r\n      FilterUrl,\r\n      {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      },\r\n      {\r\n        items: (page) => page.results,\r\n        params: true,\r\n      }\r\n    );\r\n    const response = await fetcher.json();\r\n    console.log(response);\r\n    setData(response.data);\r\n    setTotalPages(response.totalPages);\r\n    setLoading(false);\r\n    console.log(Dates.endDate);\r\n  }\r\n  async function fetchDataFiltered() {\r\n    filterProjectsType(props.type);\r\n    let prefix = address();\r\n    let FilterUrl =\r\n      prefix +\r\n      \"programs?\" +\r\n      \"startDate=\" +\r\n      Dates.startDate +\r\n      \"&endDate=\" +\r\n      Dates.endDate +\r\n      \"&page=\" +\r\n      currentPage +\r\n      \"&size=\" +\r\n      postsPerPage;\r\n    const fetcher = await window.fetch(\r\n      FilterUrl,\r\n      {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      },\r\n      {\r\n        items: (page) => page.results,\r\n        params: true,\r\n      }\r\n    );\r\n    const response = await fetcher.json();\r\n    console.log(response);\r\n    setData(response.data);\r\n    setTotalPages(response.totalPages);\r\n    setLoading(false);\r\n    console.log(Dates.endDate);\r\n  }\r\n  /**\r\n   * This function check the filter of Projects matching with type\r\n   * @param {string} type  type of project 'completed' ,'ongoing' , 'planned'\r\n   * @param {Array} allProjects  array of all projects\r\n   */\r\n\r\n  function filterProjectsType(type) {\r\n    if (type === \"ongoing\") projectsType = 2;\r\n    if (type === \"completed\") projectsType = 1;\r\n    if (type === \"planned\") projectsType = 3;\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [props]);\r\n\r\n  // Change page\r\n  function paginate(pageNumber) {\r\n    console.log(pageNumber);\r\n    currentPage = pageNumber.selected;\r\n    console.log(currentPage);\r\n    if (filterOn === false) fetchData();\r\n    else fetchDataFiltered();\r\n  }\r\n  function progress(x, y) {\r\n    console.log(x / y);\r\n    return (x / y) * 100;\r\n  }\r\n  const projectProgressAlign = i18n.dir() === \"rtl\" ? \"right\" : \"left\";\r\n  return (\r\n    <section>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"dateSelect mb-50 pr-0\">\r\n            <DateSelected\r\n              clicked={GetSelectedDates}\r\n              cleared={clearFilter}\r\n            ></DateSelected>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {loading && <Preload loading={loading} />}\r\n          {data !== undefined && data.length > 0 ? (\r\n            data.map((program, index) => (\r\n              <div className=\"col-md-4 col-sm-6\" key={program.id}>\r\n                <Link to={\"/Volunteer-Programs/\" + program.id}>\r\n                  <div\r\n                    className=\"causes bg-white mb-30 border-bottom\"\r\n                    style={{ height: \"500px\" }}\r\n                  >\r\n                    <div className=\"thumb\">\r\n                      <img\r\n                        src={`${address()}programs/${program.id}/image`}\r\n                        className=\"img-fullwidth\"\r\n                        width=\"100%\"\r\n                        height=\"260\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"causes-details programs clearfix p-15 pt-15 pb-15\">\r\n                      <ul className=\"list-inline font-16 font-weight-600 clearfix mb-5\">\r\n                        <li className=\"pull-right font-weight-400 text-black-333 pr-0\">\r\n                          {t(\"Target\") + \": \"}\r\n                          <span className=\"text-theme-colored font-weight-700\">\r\n                            {/* Get targeted volunteers number*/}\r\n                            {program.target}\r\n                          </span>\r\n                        </li>\r\n                        {/* <br></br> */}\r\n                        <li className=\"pull-left font-weight-400 text-black-333 pr-0\">\r\n                          {t(\"Subscribed Volunteers\") + \": \"}\r\n                          <span className=\"text-theme-colored font-weight-700\">\r\n                            {/* Get subscribed volunteers number*/}\r\n                            {program.subscribed}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                      <div className=\"progress-item mt-0\">\r\n                        <div className=\"progress\">\r\n                          <div\r\n                            data-percent={Precision(\r\n                              progress(program.subscribed, program.target)\r\n                            )}\r\n                            className=\"progress-bar\"\r\n                          >\r\n                            <span className=\"percent\">\r\n                              {Precision(\r\n                                progress(program.subscribed, program.target)\r\n                              )}\r\n                              %\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <h4 className=\"text-uppercase\">{program.name}</h4>\r\n                      <p className=\"mt-20 project-discription\">\r\n                        {parse(program.description)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h3 className=\"text-center\">\r\n              {t(\"No Volunteers Programs Available Now\")}\r\n            </h3>\r\n          )}\r\n          {totalPages > 1 && (\r\n            <div style={{ position: \"absolute\", bottom: \"0%\" }}>\r\n              <ReactPaginate\r\n                previousLabel={t(\"prev\")}\r\n                nextLabel={t(\"next\")}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={totalPages}\r\n                marginPagesDisplayed={0}\r\n                pageRangeDisplayed={4}\r\n                onPageChange={paginate}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default VolunteerPrograms;\r\n","import React from \"react\";\r\nimport Header from \"../sub_page_header\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport VolunteerPrograms from \"./volunteers-programs\";\r\n\r\nconst Programs = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <Header\r\n          name={t(\"Volunteers Programs\")}\r\n          coverImage={\"volunteer-bg-img\"}\r\n        />\r\n        <VolunteerPrograms type={\"ongoing\"} />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Programs;\r\n"],"sourceRoot":""}