{"version":3,"sources":["components/vlounteers/programSlider.js","components/vlounteers/single-program.js"],"names":["Slider","props","getImage","name","src","address","state","progId","alt","className","style","height","media","this","length","slidesPerScroll","rtl","arrowLeft","marginLeft","arrowRight","marginRight","addArrowClickHandler","infinite","clickToChange","centered","breakpoints","1000","slidesPerPage","500","animationSpeed","map","mediaItem","margin","type","controls","playIcon","playing","url","Component","SingleVolunteersProgram","getMedia","i","all_media","images","program","videos","push","console","log","showDate","startAt","class","progress","x","y","allMedia","render","id","match","params","axios","get","headers","i18n","language","data","setState","description","setTimeout","bind","renderContainer","t","listPadding","dir","Fragment","undefined","maxHeight","locationName","model","data-percent","Precision","subscribed","target","withTranslation"],"mappings":"qTAuGeA,E,keAjGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,SAAW,SAACC,GACV,MAAa,SAATA,EAEA,yBACEC,IAAG,UAAKC,cAAL,oBAA0B,EAAKC,MAAMC,OAArC,UACHC,IAAI,gBACJC,UAAU,GACVC,MAAO,CAAEC,OAAQ,WAKnB,yBACEP,IAAG,UAAKC,cAAL,oBAA0BF,EAA1B,UACHK,IAAI,gBACJC,UAAU,GACVC,MAAO,CAAEC,OAAQ,YAtBvB,EAAKL,MAAQ,CACXM,MAAO,EAAKX,MAAMW,MAClBL,OAAQ,EAAKN,MAAMM,QAJJ,E,qDA4BT,IAAD,OACDK,EAAQC,KAAKP,MAAMM,MAEzB,OAAIA,EAAME,OAAS,EAEf,kBAAC,IAAD,CACEC,gBAAiB,EAEjBC,KAAG,EACHC,UACE,uBACER,UAAU,4BACVC,MAAO,CAAEQ,WAAY,UAGzBC,WACE,uBACEV,UAAU,2BACVC,MAAO,CAAEU,YAAa,UAG1BC,sBAAoB,EAEpBC,UAAQ,EACRC,eAAa,EACbC,UAAQ,EACRC,YAAa,CACXC,IAAM,CAEJC,cAAe,EACfJ,eAAe,EACfC,UAAU,EAEVF,UAAU,GAEZM,IAAK,CACHD,cAAe,EACfZ,gBAAiB,EACjBQ,eAAe,EACfC,UAAU,EACVK,eAAgB,IAChBP,UAAU,KAKbV,EAAMkB,KAAI,SAACC,GAAD,OACT,yBAAKtB,UAAU,mBAAmBC,MAAO,CAAEsB,OAAQ,WAC7B,QAAnBD,EAAUE,KACT,EAAK/B,SAAS6B,EAAU5B,MAExB,yBAAKO,MAAO,CAAEC,OAAQ,QAASqB,OAAQ,MACrC,kBAAC,IAAD,CACEE,UAAU,EACVC,UAAQ,EACRC,SAAS,EACT3B,UAAU,GACV4B,IAAG,UAAKhC,cAAL,oBAA0B0B,EAAU5B,KAApC,kBAQL,S,GA9FGmC,a,yCCefC,E,keACJ,aAAe,IAAD,8BACZ,gBAgDFC,SAAW,WACT,IAGIC,EAHAC,EAAY,CAAC,CAAEvC,KAAM,OAAQ8B,KAAM,QACnCU,EAAS,EAAKrC,MAAMsC,QAAQD,OAC5BE,EAAS,EAAKvC,MAAMsC,QAAQC,OAEhC,IAAKJ,EAAI,EAAGA,EAAIE,EAAO7B,OAAQ2B,IAC7BC,EAAUI,KAAK,CAAE3C,KAAMwC,EAAOF,GAAGtC,KAAM8B,KAAM,QAE/C,IAAKQ,EAAI,EAAGA,EAAII,EAAO/B,OAAQ2B,IAC7BC,EAAUI,KAAK,CAAE3C,KAAM0C,EAAOJ,GAAGtC,KAAM8B,KAAM,QAG/C,OADAc,QAAQC,IAAIL,EAAO7B,OAAQ+B,EAAO/B,OAAQ4B,EAAU5B,QAC7C4B,GA7DK,EAgEdO,SAAW,WACT,OAAmC,OAA/B,EAAK3C,MAAMsC,QAAQM,QAAyB,KAG5C,wBAAIC,MAAM,8CACR,uBAAG1C,UAAU,uBACb,0BAAMA,UAAU,IAAI,EAAKH,MAAMsC,QAAQM,WAtEjC,EA2EdE,SAAW,SAACC,EAAGC,GAEb,OADAP,QAAQC,IAAIK,EAAIC,GACRD,EAAIC,EAAK,KA3EjB,EAAKhD,MAAQ,CACXsC,QAAS,GAETW,SAAU,GACVC,QAAQ,GANE,E,2LAcRC,EAAK5C,KAAKZ,MAAMyD,MAAMC,OAAOF,G,kBAECG,IAAMC,IAAN,UAAaxD,cAAb,oBAAkCoD,GAAM,CACtEK,QAAS,CAAE,kBAAkB,GAAlB,OAAsBC,IAAKC,a,gBAD1BpB,E,EAANqB,KAGRpD,KAAKqD,SAAS,CAAEtB,YAChBG,QAAQC,IAAInC,KAAKP,MAAMsC,QAAQuB,a,kDAE/BpB,QAAQC,IAAI,iD,QAGdoB,WACE,WACEvD,KAAKqD,SAAS,CAAEV,QAAQ,KACxBa,KAAKxD,MACP,I,6RAQE4C,EAAK5C,KAAKZ,MAAMyD,MAAMC,OAAOF,G,kBAECG,IAAMC,IAAN,UAAaxD,cAAb,oBAAkCoD,GAAM,CACtEK,QAAS,CAAE,kBAAkB,GAAlB,OAAsBC,IAAKC,a,gBAD1BpB,E,EAANqB,KAGRpD,KAAKqD,SAAS,CAAEtB,YAChBG,QAAQC,IAAInC,KAAKP,MAAMsC,QAAQuB,a,kDAE/BpB,QAAQC,IAAI,iD,+IAoCd,IAAIsB,GAAkB,EACtB,GAAIzD,KAAKP,MAAMkD,OAAQ,CAAC,IACde,EAAM1D,KAAKZ,MAAXsE,EACA3B,EAAY/B,KAAKP,MAAjBsC,QACJW,EAAW1C,KAAK2B,WACdgC,EAA6B,QAAfT,IAAKU,MAAkB,QAAU,OAGrDH,EACE,kBAAC,IAAMI,SAAP,KACE,yBAAKjE,UAAU,gBACb,iCACE,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAI0C,MAAM,oBAAoBP,EAAQzC,MACtC,yBAAKM,UAAU,+CACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iBAECkE,IAAbpB,GAA0BA,EAASzC,OAAS,EAC3C,kBAAC,EAAD,CACEF,MAAO2C,EACPhD,OAAQqC,EAAQa,KAGlB,yBACEhD,UAAU,mBACVC,MAAO,CAAEkE,UAAW,UAEpB,yBACExE,IAAG,UAAKC,cAAL,oBACDuC,EAAQa,GADP,UAGHjD,IAAI,gBACJC,UAAU,2BAMlB,yBAAKA,UAAU,8DACb,wBAAI0C,MAAM,8CACR,uBAAG1C,UAAU,qBACb,0BAAMA,UAAU,IACd,mCACCmC,EAAQiC,eAGb,mCACChE,KAAKoC,WACN,yBAAKxC,UAAU,QACb,yBACEA,UAAW,mBAAqB+D,GAEP,OAAxB5B,EAAQuB,YACP,kBAAC,IAAD,CACEW,MAAOlC,EAAQuB,cAEf,OAGR,yBAAK1D,UAAU,uBACb,yBAAKA,UAAU,YACb,yBACEsE,eAAcC,YACZnE,KAAKuC,SACHR,EAAQqC,WACRrC,EAAQsC,SAGZzE,UAAU,gBAEV,0BAAMA,UAAU,WACbuE,YACCnE,KAAKuC,SACHR,EAAQqC,WACRrC,EAAQsC,SAJd,QAYN,wBAAIzE,UAAU,8BACZ,wBAAIA,UAAU,wBACX8D,EAAE,UAAY,KACf,0BAAM9D,UAAU,mBAEbmC,EAAQsC,SAGb,wBAAIzE,UAAU,uBACX8D,EAAE,yBAA2B,KAC9B,0BAAM9D,UAAU,mBAEbmC,EAAQqC,yBAiBzC,OAAOX,M,GAtM2BhC,aAyMvB6C,wBAAkB5C","file":"static/js/31.0d7f249b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Carousel from \"@brainhubeu/react-carousel\";\r\nimport address from \"../utils/address\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nclass Slider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      media: this.props.media,\r\n      progId: this.props.progId,\r\n    };\r\n  }\r\n\r\n  getImage = (name) => {\r\n    if (name === \"main\")\r\n      return (\r\n        <img\r\n          src={`${address()}programs/${this.state.progId}/image`}\r\n          alt=\"program image\"\r\n          className=\"\"\r\n          style={{ height: \"400px\" }}\r\n        />\r\n      );\r\n    else\r\n      return (\r\n        <img\r\n          src={`${address()}programs/${name}/image`}\r\n          alt=\"program image\"\r\n          className=\"\"\r\n          style={{ height: \"400px\" }}\r\n        />\r\n      );\r\n  };\r\n  render() {\r\n    const media = this.state.media;\r\n\r\n    if (media.length > 0) {\r\n      return (\r\n        <Carousel\r\n          slidesPerScroll={1}\r\n          // autoPlay={6000}\r\n          rtl\r\n          arrowLeft={\r\n            <i\r\n              className=\"fa fa-chevron-right fa-2x\"\r\n              style={{ marginLeft: \"10px\" }}\r\n            />\r\n          }\r\n          arrowRight={\r\n            <i\r\n              className=\"fa fa-chevron-left fa-2x\"\r\n              style={{ marginRight: \"10px\" }}\r\n            />\r\n          }\r\n          addArrowClickHandler\r\n          // animationSpeed={1000}\r\n          infinite\r\n          clickToChange\r\n          centered\r\n          breakpoints={{\r\n            1000: {\r\n              // these props will be applied when screen width is less than 1000px\r\n              slidesPerPage: 1,\r\n              clickToChange: false,\r\n              centered: false,\r\n\r\n              infinite: false,\r\n            },\r\n            500: {\r\n              slidesPerPage: 1,\r\n              slidesPerScroll: 1,\r\n              clickToChange: false,\r\n              centered: false,\r\n              animationSpeed: 2000,\r\n              infinite: false,\r\n            },\r\n          }}\r\n        >\r\n          {/* /projects/step/{imageName}/image */}\r\n          {media.map((mediaItem) => (\r\n            <div className=\"post-thumb thumb\" style={{ margin: \"20px 0\" }}>\r\n              {mediaItem.type === \"img\" ? (\r\n                this.getImage(mediaItem.name)\r\n              ) : (\r\n                <div style={{ height: \"400px\", margin: \"0\" }}>\r\n                  <ReactPlayer\r\n                    controls={true}\r\n                    playIcon\r\n                    playing={false}\r\n                    className=\"\"\r\n                    url={`${address()}programs/${mediaItem.name}/video`}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </Carousel>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nexport default Slider;\r\n","import React, { Component } from \"react\";\r\nimport address from \"../utils/address\";\r\nimport axios from \"axios\";\r\nimport i18n from \"i18next\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport { Precision, getNumber } from \"../events/getMonthName\";\r\nimport parse from \"html-react-parser\";\r\nimport Slider from \"./programSlider\";\r\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\r\nimport \"froala-editor/css/froala_style.min.css\";\r\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\r\nimport FroalaEditorView from \"react-froala-wysiwyg/FroalaEditorView\";\r\n\r\n/**\r\n * This Component display project information like (carousal of images , name , discription ...)\r\n * @component\r\n * @see http://sadagaat-uk.org/single-projects/1944\r\n */\r\n\r\nclass SingleVolunteersProgram extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      program: [],\r\n      // projectImages: [],\r\n      allMedia: [],\r\n      render: false,\r\n    };\r\n  }\r\n  /**\r\n   * return project from API\r\n   */\r\n  async componentDidMount() {\r\n    // get projct id from url\r\n    let id = this.props.match.params.id;\r\n    try {\r\n      const { data: program } = await axios.get(`${address()}programs/${id}`, {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      });\r\n      this.setState({ program });\r\n      console.log(this.state.program.description);\r\n    } catch (error) {\r\n      console.log(\"can not load project for the home page slider\");\r\n    }\r\n\r\n    setTimeout(\r\n      function () {\r\n        this.setState({ render: true });\r\n      }.bind(this),\r\n      10\r\n    );\r\n  }\r\n\r\n  /**\r\n   * returned project when recive prpos like language 'ar' , 'en'\r\n   */\r\n  async componentWillReceiveProps() {\r\n    let id = this.props.match.params.id;\r\n    try {\r\n      const { data: program } = await axios.get(`${address()}programs/${id}`, {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      });\r\n      this.setState({ program });\r\n      console.log(this.state.program.description);\r\n    } catch (error) {\r\n      console.log(\"can not load project for the home page slider\");\r\n    }\r\n  }\r\n\r\n  getMedia = () => {\r\n    let all_media = [{ name: \"main\", type: \"img\" }];\r\n    let images = this.state.program.images;\r\n    let videos = this.state.program.videos;\r\n    let i;\r\n    for (i = 0; i < images.length; i++) {\r\n      all_media.push({ name: images[i].name, type: \"img\" });\r\n    }\r\n    for (i = 0; i < videos.length; i++) {\r\n      all_media.push({ name: videos[i].name, type: \"vid\" });\r\n    }\r\n    console.log(images.length, videos.length, all_media.length);\r\n    return all_media;\r\n  };\r\n\r\n  showDate = () => {\r\n    if (this.state.program.startAt === null) return null;\r\n    else\r\n      return (\r\n        <h5 class=\"font-weight-600 text-gray-dimgray d-inline\">\r\n          <i className=\"fa fa-calendar m-5\"></i>\r\n          <span className=\"\">{this.state.program.startAt}</span>\r\n        </h5>\r\n      );\r\n  };\r\n\r\n  progress = (x, y) => {\r\n    console.log(x / y);\r\n    return (x / y) * 100;\r\n  };\r\n\r\n  render() {\r\n    let renderContainer = false;\r\n    if (this.state.render) {\r\n      const { t } = this.props;\r\n      const { program } = this.state;\r\n      let allMedia = this.getMedia();\r\n      const listPadding = i18n.dir() === \"rtl\" ? \"right\" : \"left\";\r\n      //push default project image to array of images\r\n\r\n      renderContainer = (\r\n        <React.Fragment>\r\n          <div className=\"main-content\">\r\n            <section>\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 class=\"line-bottom mt-0\">{program.name}</h2>\r\n                    <div className=\" media sm-maxwidth400 mt-5 mb-0 pt-10 pb-15\">\r\n                      <div className=\"row\">\r\n                        <div className=\"causes\">\r\n                          <div className=\"row-fluid\">\r\n                            <div className=\"col-md-6\">\r\n                              {/* check if peoject image array has more than defualte image */}\r\n                              {allMedia !== undefined && allMedia.length > 1 ? (\r\n                                <Slider\r\n                                  media={allMedia}\r\n                                  progId={program.id}\r\n                                ></Slider>\r\n                              ) : (\r\n                                <div\r\n                                  className=\"post-thumb thumb\"\r\n                                  style={{ maxHeight: \"400px\" }}\r\n                                >\r\n                                  <img\r\n                                    src={`${address()}programs/${\r\n                                      program.id\r\n                                    }/image`}\r\n                                    alt=\"project image\"\r\n                                    className=\"img-responsive mb-10\"\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6 causes-details programs clearfix p-15 pt-15 pb-15\">\r\n                              <h5 class=\"font-weight-600 text-gray-dimgray d-inline\">\r\n                                <i className=\"fa fa-map-marker\"></i>\r\n                                <span className=\"\">\r\n                                  <span> </span>\r\n                                  {program.locationName}\r\n                                </span>\r\n                              </h5>\r\n                              <span> </span>\r\n                              {this.showDate()}\r\n                              <div className=\"mt-5\">\r\n                                <div\r\n                                  className={\"list-formatting \" + listPadding}\r\n                                >\r\n                                  {program.description !== null ? (\r\n                                    <FroalaEditorView\r\n                                      model={program.description}\r\n                                    />\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"progress-item mt-20\">\r\n                                <div className=\"progress\">\r\n                                  <div\r\n                                    data-percent={Precision(\r\n                                      this.progress(\r\n                                        program.subscribed,\r\n                                        program.target\r\n                                      )\r\n                                    )}\r\n                                    className=\"progress-bar\"\r\n                                  >\r\n                                    <span className=\"percent\">\r\n                                      {Precision(\r\n                                        this.progress(\r\n                                          program.subscribed,\r\n                                          program.target\r\n                                        )\r\n                                      )}\r\n                                      %\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"list-inline clearfix mt-10\">\r\n                                <li className=\"pull-right flip pr-0\">\r\n                                  {t(\"Target\") + \": \"}\r\n                                  <span className=\"font-weight-700\">\r\n                                    {/* Get targeted volunteers number*/}\r\n                                    {program.target}\r\n                                  </span>\r\n                                </li>\r\n                                <li className=\"pull-left flip pr-0\">\r\n                                  {t(\"Subscribed Volunteers\") + \": \"}\r\n                                  <span className=\"font-weight-700\">\r\n                                    {/* Get subscribed volunteers number*/}\r\n                                    {program.subscribed}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return renderContainer;\r\n  }\r\n}\r\nexport default withTranslation()(SingleVolunteersProgram);\r\n"],"sourceRoot":""}